{"version":3,"sources":["Alert.js","Navbar.js","TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","copy","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setMode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4a21775d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong className=\"text-justify\">{props.alert.type}</strong>   {props.alert.msg}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react'\r\n\r\n\r\nexport default function \r\nNavbar(props) {\r\n    return (\r\n        <div>\r\n           <div className=\"App\">\r\n              <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n              <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                  </li>\r\n                  {/* <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/about\">About</a>\r\n                  </li> */}\r\n                </ul>\r\n                <form className={`form-check d-flex form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                  <input className=\"form-check-input \" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                  <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Toggle mode</label>\r\n                </form>\r\n                {/* <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'} `}>\r\n                  <input className=\"form-check-input form-control me-2\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                  <label className=\"form-check-label form-control me-2\" htmlFor=\"flexSwitchCheckDefault\">Toggle mode</label>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </nav>\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const handleUpclick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted To Upper case\", \"success\")\r\n  };\r\n  const handleDownclick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted To Lower case\", \"success\")\r\n  };\r\n  const handleClear = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Cleared Text\", \"success\")\r\n  };\r\n  const handleOnchange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleCopy = () =>{\r\n    var copy = document.getElementById('exampleFormControlTextarea1');\r\n    copy.select();\r\n    navigator.clipboard.writeText(copy.value);\r\n    props.showAlert(\"Copied to clipboard\", \"success\")\r\n  }\r\n  const handleExtraspaces = () =>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra spaces removed\", \"success\")\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"mb-3 my-3 container\" style= {{color :  props.mode === 'dark' ? 'white' : 'black'} }>\r\n      <h2>{props.heading}</h2>\r\n      <textarea \r\n        className=\"form-control\"\r\n        id=\"exampleFormControlTextarea1\"\r\n        rows=\"5\"\r\n        value={text}\r\n        onChange={handleOnchange}\r\n        style= {{backgroundColor :  props.mode === 'dark' ? '#35575e': 'white' , color : props.mode === 'dark' ? 'white' : 'black'}}\r\n      ></textarea>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary my-3 mx-2\"\r\n        onClick={handleUpclick}\r\n      >\r\n        Convert to Upper Case\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary my-3 mx-2\"\r\n        onClick={handleDownclick}\r\n      >\r\n        Convert to Lower Case\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary my-3 mx-2\"\r\n        onClick={handleClear}\r\n      >\r\n        Clear Text\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary my-3 mx-2\"\r\n        onClick={handleCopy}\r\n      >\r\n        Copy Text\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary my-3 mx-2\"\r\n        onClick={handleExtraspaces}\r\n      >\r\n        Remove Extra Spaces\r\n      </button>\r\n    </div>\r\n    <div className=\"container my-3 \" style= {{color :  props.mode === 'dark' ? 'white' : 'black'}}>\r\n      <h3>Your Text Summarry</h3>\r\n      <p>\r\n        {text.length} letters in your text \r\n      </p>\r\n      <p>\r\n          {text.split(\" \").length} words in your text\r\n      </p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"," import React, { useState } from 'react'\nimport Alert from './Alert';\n// import About from './About';\nimport './App.css';\nimport Navbar from './Navbar';\nimport TextForm from './TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light')\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) =>{\n    setalert({\n      msg : message,\n      type : type,\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  }\n  \n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#1d2d3e'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Dark mode has been disabled\", \"success\")\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      \n      <Navbar title = \"Text Utils\" mode = {mode} toggleMode={toggleMode}/>\n      <Alert  alert = {alert} />\n      {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n            \n            {/* <Route exact path=\"/\"> */}\n            <TextForm heading = \"Enter Your Text Here\" mode = {mode} showAlert = {showAlert}/>\n            {/* </Route>\n      </Switch>\n\n    </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}